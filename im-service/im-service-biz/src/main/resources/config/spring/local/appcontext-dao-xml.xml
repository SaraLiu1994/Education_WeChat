<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:config/mybatis/jdbc.properties</value>
        </property>
    </bean>

    <!-- 配置数据源 写库 -->
    <bean id="writeDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${driverClass}"/>
        <property name="jdbcUrl" value="${jdbcUrl_w}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="initialPoolSize" value="1"/>
        <property name="minPoolSize" value="0"/>
        <property name="maxPoolSize" value="10"/>
        <property name="acquireIncrement" value="5"/>
        <property name="maxIdleTime" value="10"/>
        <property name="maxStatements" value="0"/>
    </bean>

    <bean id="readDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${driverClass}"/>
        <property name="jdbcUrl" value="${jdbcUrl_r}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="initialPoolSize" value="1"/>
        <property name="minPoolSize" value="0"/>
        <property name="maxPoolSize" value="10"/>
        <property name="acquireIncrement" value="5"/>
        <property name="maxIdleTime" value="10"/>
        <property name="maxStatements" value="0"/>
    </bean>

    <bean id="dataSource" class="com.starsea.im.biz.interceptor.ChooseDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <!-- write -->
                <entry key="write" value-ref="writeDataSource"/>
                <!-- read -->
                <entry key="read" value-ref="readDataSource"/>
            </map>

        </property>
        <property name="defaultTargetDataSource" ref="writeDataSource"/>
    </bean>

    <!--通过模板定制mybatis的行为 -->
    <bean id="sqlSessionTemplateSimple" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <!--更新采用单个模式 -->
        <constructor-arg index="1" value="SIMPLE"/>
    </bean>

    <!--通过模板定制mybatis的行为 -->
    <bean id="sqlSessionTemplateBatch" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <!--更新采用批量模式 -->
        <constructor-arg index="1" value="BATCH"/>
    </bean>
    <!-- 采用自动扫描方式创建mapper bean(单个更新模式) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.starsea.im.biz.dao" />
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateSimple" />
        <property name="annotationClass" value="com.starsea.im.biz.annotation.Single" />
    </bean>

    <!-- 采用自动扫描方式创建mapper bean(批量更新模式) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.starsea.im.biz.dao" />
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateBatch" />
        <property name="annotationClass" value="com.starsea.im.biz.annotation.Batch" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.starsea.im.biz.entity"/>
    </bean>

    <!-- 配置事务 -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 配置基于注解的事物aop -->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
</beans>